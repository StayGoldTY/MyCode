' From Directory to Workspace is a script that recursively scan a DOS directory
' and creates a worspace that match it

' Initialize global modes
Option explicit
ValidationMode = False

' Enter the directory to scan
Dim path
path = InputBox ("From Directory to Workspace allows you to create a Workspace that matches the content of a directory. Enter the path of the directory to scan (the workspace file will be stored under this directory):", "From Directory to Workspace", "C:\temp")
output "From Directory to Workspace"
output "Scanning directory: " + path

' Check the path
Dim fso, folder
Set fso = CreateObject("Scripting.FileSystemObject")
Set folder = Nothing
If fso.FolderExists(path) then
   Set folder = fso.GetFolder(path)
End If   

' Try to scan the path
Dim rootPath
If not folder is Nothing then
   ' Create the workspace file
   Dim workspace
   Set workspace = fso.OpenTextFile (folder.path + "\" + folder.name + ".sws", 2, True)
   rootPath= folder.path + "\"
   If not workspace is Nothing then
      ' Write the header
      workspace.WriteLine("<?xml version=""1.0"" encoding=""UTF-8""?>")
      workspace.WriteLine("<?PowerDesigner signature=""Workspace"" version=""9.5.0.610""?>")
      workspace.WriteLine("<!-- please do not edit this file -->")
      workspace.WriteLine("<Workspace>")
	   workspace.WriteLine("<Local Expanded=""Yes"" Name=""" + folder.name + """>")
         
      ' Begin the recursive scan
      ScanDirectoryToWorkspace folder, workspace
      
      ' Write the footer
	   workspace.WriteLine("</Local>")
	   'workspace.WriteLine("<BrowserModule Name=""Repository""/>")
	   workspace.WriteLine("</Workspace>")
      workspace.Close
   Else
      ' Log message
      MsgBox "Fail to create the workspace file"
   End If
Else
   ' Log message
   if not path = "" then
      MsgBox "The specified folder path does not exist: " + path
   End If
End If

' This function get the relative URL of a sub-document
Function ConvertPathToLocalURL(document)
   Dim documentPath, rootPos
   documentPath = document.path
   rootPos = InStr(documentPath, rootPath)
   If rootPos = 1 then
      documentPath = Replace(documentPath, rootPath, "")
   End If
   documentPath = Replace(documentPath, "\", "/")
   ConvertPathToLocalURL = documentPath
End Function

' The recursive procedure that scan directories and fill the workspace file
Sub ScanDirectoryToWorkspace (folder, workspace)

   ' check the parameters
   If folder is Nothing or workspace is Nothing then
      Exit Sub
   End If
   
   ' Log message in the output
   output "Scanning the directory " + folder.Path
      
   ' Recursive call on sub folders
   Dim subFolder
   For Each subFolder in folder.SubFolders
      ' Add folder header
      workspace.WriteLine("<Folder Expanded=""No"" Name=""" + subFolder.name + """>")
      ' Recursive call
      ScanDirectoryToWorkspace subFolder, workspace
      'Add folder footer
      workspace.WriteLine("</Folder>")
   Next
   
   ' Loop on files
   Dim file, fileObject
   For Each file in folder.Files
      ' add a document line for the file
      WriteDocumentLine file, workspace
   Next
   
   ' Log end message in the output
   output "End of directory " + folder.path
   
End Sub

' The procedure writes a line in the workspace file for a document
Sub WriteDocumentLine (file, workspace)

   ' check the parameters
   If file is Nothing or workspace is Nothing then
      Exit Sub
   End If

   ' get the file extension
   Dim ext, pos
   ext = file.name
   pos = InStrRev(ext, ".")
   If pos > 1 then
      ext = Right(file.name, Len(file.name) - pos)
   End If
   ext = LCase(ext)
   
   ' skip workspace files
   If ext = "sws" then
      Exit Sub
   End If
   
   ' skip backup extensions
   If ext = "cdb" or ext = "pdb" or ext = "oob" or ext = "bpb" or ext = "feb" or ext = "mtb" or ext = "bmr" then
      Exit Sub
   End If
   
   ' detect model extensions
   Dim modelType
   modelType = ""
   If ext = "cdm" or ext = "mcd" then
      modelType = "{1E597170-9350-11D1-AB3C-0020AF71E433}"
   ElseIf ext = "pdm" or ext = "mpd" then
      modelType = "{CDE44E21-9669-11D1-9914-006097355D9B}"
   ElseIf ext = "oom" or ext = "moo" then
      modelType = "{18112060-1A4B-11D1-83D9-444553540000}"
   ElseIf ext = "fem" or ext = "mnt" then
      modelType = "{A3D646C2-7F72-4197-8A31-32275EB456B4}"
   ElseIf ext = "bpm" or ext = "mpm" then
      modelType = "{3D3C409C-B60D-430E-A1C4-B880653AC634}"
   ElseIf ext = "mtm" then
      modelType = "{8B5D3680-2056-4280-8B77-FBE8472CB1A8}"
   ElseIf ext = "mmr" then
      modelType = "{585CBB28-C940-11D1-BD0D-00A02478ECC9}"
   End If
   
   ' write in workspace
   If modelType = "" then
      workspace.WriteLine("<Document Name=""" + file.name + """ URL=""" + ConvertPathToLocalURL(file) + """/>")
   Else
      workspace.WriteLine("<Model Name=""" + file.name + """ URL=""" + ConvertPathToLocalURL(file) + """ Type=""" + modelType + """/>")   
   End if
   
End Sub      

